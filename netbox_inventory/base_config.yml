---
- name: Fetch NetBox Config Context and Jinja2 Template, then Generate Config File
  hosts: all
  gather_facts: no
  vars:
    netbox_api_token: "{{ netbox_api_token }}"  # Token passed as an extra var

  tasks:

    - name: Debug - Check if netbox_api_token is defined
      debug:
        msg: "NetBox API Token: {{ netbox_api_token }}"

    - name: Set Config Context from NetBox Inventory
      set_fact:
        config_context: "{{ hostvars[inventory_hostname]['config_context']['all_devices_base_config'] | default({}) }}"

    - name: Get NetBox Jinja2 Config Template (base-config)
      uri:
        url: "http://192.168.1.178:8000/api/extras/config-templates/?name=base-config"
        method: GET
        headers:
          Authorization: "Token {{ netbox_api_token }}"
          Content-Type: "application/json"
        return_content: yes
        status_code: 200
      register: netbox_template_response

    - name: Extract Jinja2 Template Content
      set_fact:
        jinja2_template: "{{ netbox_template_response.json.results[0].template_code | default('') }}"

    - name: Save Jinja2 Template to File
      copy:
        content: "{{ jinja2_template }}"
        dest: "/tmp/base-config.j2"
      when: jinja2_template | length > 0

    - name: Render Configuration from NetBox Template
      template:
        src: "/tmp/base-config.j2"
        dest: "/tmp/{{ inventory_hostname }}.cfg"
      when: jinja2_template | length > 0

    - name: Ensure the output config directory exists
      file:
        path: "/home/awx-generated-configs"
        state: directory
        # mode: "0755"
      # become: yes

    - name: Save the generated configuration file to a permanent location
      copy:
        src: "/tmp/{{ inventory_hostname }}.cfg"
        dest: "/tmp/home/awx-generated-configs/{{ inventory_hostname }}.cfg"
        owner: "{{ test-user1 | default('root') }}"
        mode: "0755"
      become: yes
      when: jinja2_template | length > 0
