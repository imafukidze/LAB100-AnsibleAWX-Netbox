---
- name: Fetch Rendered Config from NetBox and Apply to Cisco Switch
  hosts: all
  gather_facts: no

  tasks:
    - name: Fetch NetBox device details dynamically
      uri:
        url: "http://{{ netbox_host }}/api/dcim/devices/{{ netbox_device_id }}/"
        method: GET
        headers:
          Authorization: "Token {{ netbox_api_token }}"
        return_content: yes
        status_code: 200
      register: netbox_device_details

    - name: Extract NetBox device URL from response
      set_fact:
        netbox_device_url: "{{ netbox_device_details.json.render_config_url }}"

    - name: Get rendered configuration from NetBox
      uri:
        url: "{{ netbox_device_url }}"
        method: POST
        headers:
          Authorization: "Token {{ netbox_api_token }}"
          Content-Type: "application/json"
        return_content: yes
        status_code: 200
      register: netbox_rendered_config

    - name: Extract configuration content from NetBox response
      set_fact:
        rendered_config: "{{ netbox_rendered_config.json.content }}"

    - name: Debug - Display rendered configuration
      debug:
        msg: "{{ rendered_config }}"

    - name: Push configuration to Cisco switch
      cisco.ios.ios_config:
        lines: "{{ rendered_config.splitlines() }}"  # Push the config as a list of lines
        save_when: modified  # Save the configuration only if modified
      vars:
        ansible_user: "{{ ansible_user }}"
        ansible_password: "{{ ansible_password }}"
        ansible_host: "{{ ansible_host }}"
        ansible_become: yes
        ansible_become_password: "{{ ansible_enable_password }}"
