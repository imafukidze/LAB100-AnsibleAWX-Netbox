---
- name: Fetch Rendered Config from NetBox and Apply to Cisco Switch
  hosts: all
  gather_facts: no
  vars:
    netbox_api_token: "{{ netbox_api_token }}"  # Token passed as an extra var
    netbox_device_url: "http://192.168.1.178:8000/api/dcim/devices/3/render-config/"  # URL for the rendered config
    ansible_enable_password: cisco  # Define it directly here

  tasks:
    - name: Get rendered configuration from NetBox
      uri:
        url: "{{ netbox_device_url }}"
        method: POST
        headers:
          Authorization: "Token {{ netbox_api_token }}"
          Content-Type: "application/json"
        return_content: yes
        status_code: 200
      register: netbox_rendered_config

    - name: Extract configuration content from NetBox response
      set_fact:
        rendered_config: "{{ netbox_rendered_config.json.content }}"

    - name: Debug - Display rendered configuration
      debug:
        msg: "{{ rendered_config }}"

    - name: Push configuration to Cisco switch
      cisco.ios.ios_config:
        host: "{{ ansible_host }}"  # Use the IP address or hostname from inventory
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        authorize: yes
        auth_pass: "{{ ansible_enable_password }}"  # Provide enable password
        config: "{{ rendered_config }}"  # This should be the configuration string or lines
        save_when: modified  # Save the configuration only if modified
